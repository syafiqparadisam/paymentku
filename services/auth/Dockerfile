# Base image
FROM node:18.17.1-alpine

# Create app directory
WORKDIR /usr/src/app

# A wildcard is used to ensure both package.json AND package-lock.json are copied
COPY package*.json ./

# Install app dependencies
RUN npm install

# VARIABEL SET WHEN BUILD TIME
ARG CLIENT_ID
ARG CLIENT_SECRET
ARG CALLBACK_URL_GOOGLE
ARG FRONTEND
ARG SMTP_KEY
ARG SMTP_LOGIN
ARG AUTH_SVC
ARG USER_ICON_DEFAULT
ARG USER_SVC
ARG TF_SVC
ARG HISTORY_SVC
ARG NEST_APP_PORT
ARG REDIS_HOST
ARG DB_PORT
ARG DB_HOST
ARG DB_USER
ARG DB_PASSWD
ARG DB_NAME
ARG REDIS_PORT
ARG CLOUDINARY_APISECRET
ARG CLOUDINARY_CLOUDNAME
ARG CLOUDINARY_APIKEY

# SET OS ENV VARIABEL FROM ARG
ENV CLIENT_ID=${CLIENT_ID}
ENV CLIENT_SECRET=${CLIENT_SECRET}
ENV CALLBACK_URL_GOOGLE=${CALLBACK_URL_GOOGLE}
ENV FRONTEND=${FRONTEND}
ENV SMTP_KEY=${SMTP_KEY}
ENV SMTP_LOGIN=${SMTP_LOGIN}
ENV AUTH_SVC=${AUTH_SVC}
ENV USER_ICON_DEFAULT=${USER_ICON_DEFAULT}
ENV USER_SVC=${USER_SVC}
ENV TF_SVC=${TF_SVC}
ENV HISTORY_SVC=${HISTORY_SVC}
ENV NEST_APP_PORT=${NEST_APP_PORT}
ENV REDIS_HOST=${REDIS_HOST}
ENV DB_PORT=${DB_PORT}
ENV DB_HOST=${DB_HOST}
ENV DB_USER=${DB_USER}
ENV DB_PASSWD=${DB_PASSWD}
ENV DB_NAME=${DB_NAME}
ENV REDIS_PORT=${REDIS_PORT}
ENV CLOUDINARY_APISECRET=${CLOUDINARY_APISECRET}
ENV CLOUDINARY_CLOUDNAME=${CLOUDINARY_CLOUDNAME}
ENV CLOUDINARY_APIKEY=${CLOUDINARY_APIKEY}

COPY . .

# Creates a "dist" folder with the production build
RUN npm run build

# Expose the port on which the app will run
EXPOSE ${NEST_APP_PORT}

# Start the server using the production build
CMD ["npm", "run", "start:prod"]