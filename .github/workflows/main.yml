name: CI

on:
  push:
    branches:
      - main
      - develop
      - features*

jobs:
  develop:
    name: Development processes
    runs-on: ubuntu-22.04
    env:
      CLIENT_ID: ${{secrets.CLIENT_ID}}
      CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      CALLBACK_URL_GOOGLE: ${{secrets.CALLBACK_URL_GOOGLE}}
      FRONTEND: ${{secrets.FRONTEND}}
      SMTP_KEY: ${{secrets.SMTP_KEY}}
      SMTP_LOGIN: ${{secrets.SMTP_LOGIN}}
      AUTH_SVC: ${{secrets.AUTH_SVC}}
      USER_ICON_DEFAULT: ${{secrets.USER_ICON_DEFAULT}}
      USER_SVC: ${{secrets.USER_SVC}}
      TF_SVC: ${{secrets.TF_SVC}}
      HISTORY_SVC: ${{secrets.HISTORY_SVC}}
      NEST_APP_PORT: ${{secrets.NEST_APP_PORT}}
      REDIS_HOST: ${{secrets.REDIS_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_USER: ${{secrets.DB_USER}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_PARAM: ${{secrets.DB_PARAM}}
      DB_PASSWD: ${{secrets.DB_PASSWD}}
      DB_HOST: ${{secrets.DB_HOST}}
      REDIS_PORT: ${{secrets.REDIS_PORT}}
      CLOUDINARY_APISECRET: ${{secrets.CLOUDINARY_APISECRET}}
      CLOUDINARY_CLOUDNAME: ${{secrets.CLOUDINARY_CLOUDNAME}}
      CLOUDINARY_APIKEY: ${{secrets.CLOUDINARY_APIKEY}}
      GRPC_SERVER_URL: ${{secrets.GRPC_SERVER_URL}}
      HISTORY_SVC_PORT: ${{secrets.HISTORY_SVC_PORT}}
      ORIGIN_URL: ${{secrets.ORIGIN_URL}}
      TF_ICON: ${{secrets.TF_ICON}}
      TRANSFER_SVC_PORT: ${{secrets.TRANSFER_SVC_PORT}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_TAGS_PAYMENTKU: ${{secrets.DOCKER_TAGS_PAYMENTKU}}
      USER_SVC_PORT: ${{secrets.USER_SVC_PORT}}
      MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE}}

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Install golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.1

      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run docker compose
        run: |
          make

        # AUTH SERVICE START     
      - name: Download dependencies in auth service
        working-directory: ./services/auth
        run: |
          npm install

      - name: Run eslint for auth service
        working-directory: ./services/auth
        run: |
          npm run lint

      - name: Migrate table on database
        working-directory: ./services/auth
        run: |
          npm i -g typeorm
          npm run migrate-run

      - name: Test auth service
        run: |
          make test-auth
      # AUTH SERVICE END
      # HISTORY SERVICE START
      - name: Download dependencies in history service
        working-directory: ./services/history
        run: go mod download

      - name: Test history service
        working-directory: .
        run: make test-history

      # HISTORY SERVICE END
      # TRANSACTION SERVICE START
      - name: Download dependencies in transaction service
        working-directory: ./services/transaction
        run: go mod download

      - name: Test transaction service
        run: make test-transaction
      # TRANSACTION SERVICE END
      # USER SERVICE START
      - name: Download dependencies in user service
        working-directory: ./services/user
        run: go mod download

      - name: Test user service
        run: make test-user
      # USER SERVICE END
     
      # FRONTEND START
      - name: Download dependencies in frontend app
        working-directory: ./www
        run: npm install

      - name: Run eslint for frontend app
        working-directory: ./www
        run: npm run lint
      # FRONTEND ENV

      - name: Revert migration
        run: |
          make migrate-revert

  staging:
    name: Staging
    runs-on: ubuntu-22.04
    if: ${{github.ref == 'refs/heads/develop'}} || ${{github.ref == 'refs/heads/main'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login into docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}


        # HISTORY SERVICE START
      - name: Deploy history service to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./services/history
          file: Dockerfile
          push: true
          build-args: |
            DB_PORT=${{secrets.DB_PORT}}
            DB_NAME=${{secrets.DB_NAME}}
            DB_HOST=${{secrets.DB_HOST}}
            DB_USER=${{secrets.DB_USER}}
            DB_PASSWD=${{secrets.DB_PASSWD}}
            HISTORY_SVC_PORT=${{secrets.HISTORY_SVC_PORT}}
            GRPC_SERVER_URL=${{secrets.GRPC_SERVER_URL}}
            DB_PARAM=${{secrets.DB_PARAM}}
            ORIGIN_URL=${{secrets.ORIGIN_URL}}
          tags: ${{secrets.DOCKER_USERNAME}}/history_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

        # HISTORY SERVICE END

        # TRANSACTION SERVICE START
      - name: Deploy transaction service to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./services/transaction
          file: Dockerfile
          push: true
          build-args: |
            DB_PORT=${{secrets.DB_PORT}}
            DB_NAME=${{secrets.DB_NAME}}
            TF_ICON=${{secrets.TF_ICON}}
            DB_HOST=${{secrets.DB_HOST}}
            DB_USER=${{secrets.DB_USER}}
            DB_PASSWD=${{secrets.DB_PASSWD}}
            TRANSFER_SVC_PORT=${{secrets.TRANSFER_SVC_PORT}}
            GRPC_SERVER_URL=${{secrets.GRPC_SERVER_URL}}
            DB_PARAM=${{secrets.DB_PARAM}}
            ORIGIN_URL=${{secrets.ORIGIN_URL}}

          tags: ${{secrets.DOCKER_USERNAME}}/transaction_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

        # TRANSACTION SERVICE END

        # USER SERVICE START
      - name: Deploy user service to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./services/user
          file: Dockerfile
          push: true
          build-args: |
            DB_PORT=${{secrets.DB_PORT}}
            DB_NAME=${{secrets.DB_NAME}}
            DB_HOST=${{secrets.DB_HOST}}
            DB_USER=${{secrets.DB_USER}}
            DB_PASSWD=${{secrets.DB_PASSWD}}
            USER_SVC_PORT=${{secrets.USER_SVC_PORT}}
            GRPC_SERVER_URL=${{secrets.GRPC_SERVER_URL}}
            DB_PARAM=${{secrets.DB_PARAM}}
            ORIGIN_URL=${{secrets.ORIGIN_URL}}
          tags: ${{secrets.DOCKER_USERNAME}}/user_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # USER SERVICE END

        # AUTH SERVICE START
      - name: Deploy auth service to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth
          file: Dockerfile
          push: true
          build-args: |
            CLIENT_ID=${{secrets.CLIENT_ID}}
            CLIENT_SECRET=${{secrets.CLIENT_SECRET}}
            CALLBACK_URL_GOOGLE=${{secrets.CALLBACK_URL_GOOGLE}}
            FRONTEND=${{secrets.FRONTEND}}
            SMTP_KEY=${{secrets.SMTP_KEY}}
            SMTP_LOGIN=${{secrets.SMTP_LOGIN}}
            AUTH_SVC=${{secrets.AUTH_SVC}}
            USER_ICON_DEFAULT=${{secrets.USER_ICON_DEFAULT}}
            USER_SVC=${{secrets.USER_SVC}}
            TF_SVC=${{secrets.TF_SVC}}
            HISTORY_SVC=${{secrets.HISTORY_SVC}}
            NEST_APP_PORT=${{secrets.NEST_APP_PORT}}
            REDIS_HOST=${{secrets.REDIS_HOST}}
            DB_PORT=${{secrets.DB_PORT}}
            DB_HOST=${{secrets.DB_HOST}}
            DB_USER=${{secrets.DB_USER}}
            DB_PASSWD=${{secrets.DB_PASSWD}}
            DB_NAME=${{secrets.DB_NAME}}
            REDIS_PORT=${{secrets.REDIS_PORT}}
            CLOUDINARY_APISECRET=${{secrets.CLOUDINARY_APISECRET}}
            CLOUDINARY_CLOUDNAME=${{secrets.CLOUDINARY_CLOUDNAME}}
            CLOUDINARY_APIKEY=${{secrets.CLOUDINARY_APIKEY}}
          tags: ${{secrets.DOCKER_USERNAME}}/auth_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

        # AUTH SERVICE END

        # FRONTEND APP START
      - name: Deploy frontend service to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: ./www
          file: Dockerfile
          push: true
          build-args: |
            VITE_API_URL=${{secrets.VITE_API_URL}}
            VITE_FRONTEND_URL=${{secrets.VITE_FRONTEND_URL}}
            VITE_CLIENT_ID=${{secrets.VITE_CLIENT_ID}}
            VITE_SERVICE_ID_EMAILJS=${{secrets.VITE_SERVICE_ID_EMAILJS}}
            VITE_TEMPLATE_ID_HELPING_EMAILJS=${{secrets.VITE_TEMPLATE_ID_HELPING_EMAILJS}}
            VITE_PUBLIC_KEY_EMAILJS=${{secrets.VITE_PUBLIC_KEY_EMAILJS}}
          tags: ${{secrets.DOCKER_USERNAME}}/frontend_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # FRONTEND APP END

      