name: CI

on:
  push:
    branches:
      - main
      - develop
      - features*

jobs:
  ci:
    name: CI processes
    runs-on: ubuntu-22.04
    env:
      CLIENT_ID: ${{secrets.CLIENT_ID}}
      CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      CALLBACK_URL_GOOGLE: ${{secrets.CALLBACK_URL_GOOGLE}}
      FRONTEND: ${{secrets.FRONTEND}}
      SMTP_KEY: ${{secrets.SMTP_KEY}}
      SMTP_LOGIN: ${{secrets.SMTP_LOGIN}}
      AUTH_SVC: ${{secrets.AUTH_SVC}}
      USER_ICON_DEFAULT: ${{secrets.USER_ICON_DEFAULT}}
      USER_SVC: ${{secrets.USER_SVC}}
      TF_SVC: ${{secrets.TF_SVC}}
      HISTORY_SVC: ${{secrets.HISTORY_SVC}}
      NEST_APP_PORT: ${{secrets.NEST_APP_PORT}}
      REDIS_HOST: ${{secrets.REDIS_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_USER: ${{secrets.DB_USER}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_PARAM: ${{secrets.DB_PARAM}}
      DB_PASSWD: ${{secrets.DB_PASSWD}}
      DB_HOST: ${{secrets.DB_HOST}}
      REDIS_PORT: ${{secrets.REDIS_PORT}}
      CLOUDINARY_APISECRET: ${{secrets.CLOUDINARY_APISECRET}}
      CLOUDINARY_CLOUDNAME: ${{secrets.CLOUDINARY_CLOUDNAME}}
      CLOUDINARY_APIKEY: ${{secrets.CLOUDINARY_APIKEY}}
      GRPC_SERVER_URL: ${{secrets.GRPC_SERVER_URL}}
      HISTORY_SVC_PORT: ${{secrets.HISTORY_SVC_PORT}}
      ORIGIN_URL: ${{secrets.ORIGIN_URL}}
      TF_ICON: ${{secrets.TF_ICON}}
      TRANSFER_SVC_PORT: ${{secrets.TRANSFER_SVC_PORT}}
      USER_SVC_PORT: ${{secrets.USER_SVC_PORT}}

       
    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Install golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.0

      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
      - run: |
          echo "Value of MY_SECRET1: $CLIENT_ID"
        
      # HISTORY SERVICE START
      - name: Download dependencies in history service
        working-directory: ./services/history
        run: go mod download

      - name: Test history service
        working-directory: .
        run: make test-history

      # HISTORY SERVICE END
      # TRANSACTION SERVICE START
      - name: Download dependencies in transaction service
        working-directory: ./services/transaction
        run: go mod download

      - name: Test transaction service
        run: make test-transaction
      # TRANSACTION SERVICE END
      # USER SERVICE START
      - name: Download dependencies in user service
        working-directory: ./services/user
        run: go mod download

      - name: Test user service
        run: make test-user
      # USER SERVICE END
      # AUTH SERVICE START
      - name: Download dependencies in auth service
        working-directory: ./services/auth
        run: npm install

      - name: Run eslint for auth service
        working-directory: ./services/auth
        run: npm run lint

      - name: Test auth service
        run: make test-auth
      # AUTH SERVICE END
      # FRONTEND START
      - name: Download dependencies in frontend app
        working-directory: ./www
        run: npm install

      - name: Run eslint for frontend app
        working-directory: ./www
        run: npm run lint
      # FRONTEND ENV

  cd:
    name: CD processes
    runs-on: ubuntu-22.04
    environment: 
      name: staging
    if: github.ref == 'refs/heads/develop' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Docker
        uses: docker/setup-buildx-action@v1

      - name: Login into docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

        # HISTORY SERVICE START
      - name: Build history service application
        working-directory: ./services/history
        run: docker build -t history_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} .

      - name: Update docker tag history service
        working-directory: ./services/history
        run: docker tag history_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} ${{secrets.DOCKER_USERNAME}}/history_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

      - name: Deploy history service to dockerhub
        working-directory: ./services/history
        run: docker push ${{secrets.DOCKER_USERNAME}}/history_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # HISTORY SERVICE END

        # TRANSACTION SERVICE START
      - name: Build transaction service application
        working-directory: ./services/transaction
        run: docker build -t transaction_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} .

      - name: Update docker tag transaction service
        working-directory: ./services/transaction
        run: docker tag transaction_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} ${{secrets.DOCKER_USERNAME}}/transaction_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

      - name: Deploy transaction service to dockerhub
        working-directory: ./services/transaction
        run: docker push ${{secrets.DOCKER_USERNAME}}/transaction_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # TRANSACTION SERVICE END

        # USER SERVICE START
      - name: Build user service application
        working-directory: ./services/user
        run: docker build -t user_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} .

      - name: Update docker tag user service
        working-directory: ./services/user
        run: docker tag user_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} ${{secrets.DOCKER_USERNAME}}/user_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

      - name: Deploy user service to dockerhub
        working-directory: ./services/user
        run: docker push ${{secrets.DOCKER_USERNAME}}/user_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # USER SERVICE END

        # AUTH SERVICE START
      - name: Build auth service application
        working-directory: ./services/auth
        run: docker build -t auth_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} .

      - name: Update docker tag auth service
        working-directory: ./services/auth
        run: docker tag auth_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} ${{secrets.DOCKER_USERNAME}}/auth_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

      - name: Deploy auth service to dockerhub
        working-directory: ./services/auth
        run: docker push ${{secrets.DOCKER_USERNAME}}/auth_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # AUTH SERVICE END

        # FRONTEND APP START
      - name: Build frontend service application
        working-directory: ./www
        run: docker build -t frontend_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} .

      - name: Update docker tag frontend service
        working-directory: ./www
        run: docker tag frontend_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}} ${{secrets.DOCKER_USERNAME}}/frontend_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}

      - name: Deploy frontend service to dockerhub
        working-directory: ./www
        run: docker push ${{secrets.DOCKER_USERNAME}}/frontend_paymentku:${{secrets.DOCKER_TAGS_PAYMENTKU}}
        # FRONTEND APP END